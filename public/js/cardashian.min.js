!function(a){{var b,c=Backbone.Router.extend({routes:{"":"home",decks:"listDecks","decks/:deckId":"showDeck","decks/:deckId/questions":"listQuestions","decks/:deckId/questions/:questionId":"showQuestion"},home:function(){new i,new l},listDecks:function(){console.log("List decks")},showDeck:function(){console.log("Show deck")},listQuestions:function(){console.log("List questions")},showQuestion:function(){console.log("Show question")}}),d=Backbone.Model.extend({saveLocally:function(){{var a=this;this.getQuestions(function(){var c=b.transaction(["decks","questions"],"readwrite"),d=c.objectStore("decks"),e=c.objectStore("questions"),f=d.add(a.attributes);_(a.questions.models).each(function(a){e.add(a.attributes)}),f.onsuccess=function(){console.log("DECK SAVED")},c.onsuccess=function(){console.log(a,"Saved to DB")},console.log("success")})}},getQuestions:function(a){var b=this;this.questions?a.call(this,this.questions):this.loadingQuestions?this.on("Questions loaded",function(){a.call(b,b.questions)}):(this.loadingQuestions=!0,this.questions=new g({deck:this}),this.questions.url="/api/decks/"+this.get("id")+"/questions",this.questions.fetch({complete:function(){b.loadingQuestions=!1,b.trigger("Questions loaded"),a(b.questions)}}))}}),e=Backbone.Collection.extend({url:"/api/decks",model:d,initialize:function(){decks.push(this)}}),f=Backbone.Model.extend({}),g=Backbone.Collection.extend({model:f}),h=(Backbone.Model.extend({}),Backbone.View.extend({tagName:"li",events:{click:"listQuestions"},render:function(){var b=this,c=a("<span>Save</span>");return this.$el.html(this.model.get("name")+" ").append(c),c.on("click",{el:b},function(a){a.data.el.model.saveLocally()}),this},listQuestions:function(){new k({deck:this.model})}})),i=Backbone.View.extend({title:"Decks list",el:a("#decks"),initialize:function(){var a=this;this.decks=(new e).fetch().complete(function(){a.render()})},render:function(){var a=this;this.$el.append("<h4>"+this.title+"</h4>"),this.$el.append("<ul></ul>"),_(this.decks.responseJSON).each(function(b){a.addDeck(new d(b))},this)},addDeck:function(b){var c=new h({model:b});a("ul",this.el).append(c.render().el)}}),j=Backbone.View.extend({tagName:"li",render:function(){return this.$el.html(this.model.get("id")),this}}),k=Backbone.View.extend({el:a("#questions"),initialize:function(a){var b=this;a.deck.getQuestions(b.render)},render:function(a){var b=this;this.$el.append("<h4>Questions list</h4>"),this.$el.append("<ul></ul>"),_(a.models).each(function(a){b.addQuestion(a)},this)},addQuestion:function(b){var c=new j({model:b});a("ul",this.el).append(c.render().el)}}),l=i.extend({title:"Decks list",el:a("#offlineDecks"),decks:new e,initialize:function(){this.openDB(this.retriveLocalDecks)},openDB:function(a){var c=window.indexedDB.open("Cardashian",1),d=this;c.onerror=function(a){console.log("Impossible to open indexDB",c.errorCode,a)},c.onsuccess=function(){b=this.result,a.call(d)},c.onupgradeneeded=function(a){b=a.target.result;var c=(b.createObjectStore("decks",{keyPath:"id"}),b.createObjectStore("questions",{keyPath:"id"}));c.createIndex("DeckId","DeckId",{unique:!1})}},retriveLocalDecks:function(){var a,c=this,e=b.transaction(["decks"],"readonly"),f=e.objectStore("decks");f.openCursor().onsuccess=function(b){var e=b.target.result;e?(a=new d,a.set(e.value),this.decks.add(a),console.log("Deck "+e.key+" is "+e.value.name),c.retriveLocalQuestions(a),e.continue()):console.log("No more decks!")}},retriveLocalQuestions:function(a){var c,d=new g,e=b.transaction(["questions"],"readonly"),h=e.objectStore("questions"),i=h.index("DeckId");a.questions=d,i.openCursor().onsuccess=function(a){var b=a.target.result;b?(c=new f,c.set(b.value),d.add(c),console.log("Question "+b.key+" is "+b.value.question),b.continue()):console.log("No more questions!")}}});new c}Backbone.history.start()}(jQuery);